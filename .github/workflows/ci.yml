name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings

jobs:
  tests:
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        rust:
          - nightly

    steps:
      - uses: actions/checkout@v2

#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: ${{ matrix.rust }}
#          override: true
#          components: rustfmt, clippy
#
#      - uses: actions-rs/cargo@v1
#        with:
#          command: fmt
#          args: --all -- --check
#
#      - uses: actions-rs/cargo@v1
#        with:
#          command: clippy
#          args: -- -D warnings
#
#      - uses: actions-rs/cargo@v1
#        with:
#          command: test
#
#      - uses: actions-rs/cargo@v1
#        with:
#          command: test
#          args: --no-default-features
#
#      - uses: actions-rs/cargo@v1
#        with:
#          command: test
#          args: --all-features

  tests-multi:
    needs: tests
    runs-on: [windows-2022, macos-12]
    strategy:
      matrix:
        rust:
          - nightly

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

#  coverage:
#    needs: tests
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        rust:
#          - nightly
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: ${{ matrix.rust }}
#          override: true
#          components: llvm-tools-preview
#
#      - uses: actions-rs/cargo@v1
#        with:
#          command: clean
#
#      - uses: actions-rs/cargo@v1
#        with:
#          command: test
#          args: --all-features
#        env:
#          CARGO_INCREMENTAL: '0'
#          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort'
#          RUSTDOCFLAGS: '-Cpanic=abort'
#
#      - id: coverage
#        uses: actions-rs/grcov@v0.1
#        with:
#          branch: true
#          llvm: true
#          filter: covered
#          ignore: "*/src/bin/**/*"
#
#      - uses: codecov/codecov-action@v3
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          files: ${{ steps.coverage.outputs.report }}
